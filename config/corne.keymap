/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        shift_caps_word_dance: shift_caps_word_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_WORD_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        altshift {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <25 26>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <22 21>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <20 21>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 31>;
        };

        dash {
            bindings = <&kp KP_MINUS>;
            key-positions = <18 19>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <20 19>;
        };

        plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <32 31>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <11 10>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <40 31 19>;
        };

        left_delete {
            bindings = <&kp DELETE>;
            key-positions = <0 1>;
        };

        lt {
            bindings = <&kp LT>;
            key-positions = <19 8 40>;
        };

        gt {
            bindings = <&kp GT>;
            key-positions = <7 20 40>;
        };

        bang {
            bindings = <&kp EXCL>;
            key-positions = <7 8 21>;
        };

        chaching {
            bindings = <&kp DOLLAR>;
            key-positions = <9 32 31>;
        };

        amp {
            bindings = <&kp AMPERSAND>;
            key-positions = <18 20 40>;
        };

        asterisk {
            bindings = <&kp STAR>;
            key-positions = <30 31 32>;
        };

        insert {
            bindings = <&kp INSERT>;
            key-positions = <40 41>;
        };

        right_slash {
            bindings = <&kp SLASH>;
            key-positions = <4 15 26>;
        };

        left_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <28 15 2>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <15 4 14>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <14 15 28>;
        };

        print_screen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <36 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                 &kp Q  &kp W  &kp E     &kp R  &kp T          &kp Y         &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL               &kp A  &kp S  &kp D     &kp F  &kp G          &kp H         &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&shift_caps_word_dance  &kp Z  &kp X  &kp C     &kp V  &kp B          &kp N         &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                      &kp LGUI  &mo 1  &lt 3 SPACE    &lt 4 RETURN  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB                 &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0       &kp BACKSPACE
&bt BT_CLR              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp HOME     &kp END
&shift_caps_word_dance  &trans        &trans        &trans        &trans        &key_repeat     &trans    &trans    &trans    &trans     &kp PAGE_UP  &kp PAGE_DOWN
                                                    &kp LGUI      &trans        &trans          &trans    &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB                 &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL               &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&shift_caps_word_dance  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                          &kp LGUI  &trans    &trans       &trans     &trans     &kp RALT
            >;
        };

        f_keys {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans            &trans      &kp C_MUTE           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans            &trans      &kp C_VOLUME_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans            &trans      &trans               &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
